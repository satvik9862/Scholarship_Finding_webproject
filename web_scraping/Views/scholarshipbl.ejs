<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" rel="stylesheet"/>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .scholarship-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 20px;
            padding: 20px;
        }

        .scholarship-frame {
            width: calc(33.33% - 20px);
            border: 1px solid #003049;
            border-radius: 5px;
            overflow: hidden;
        }

        .scholarship-details {
            padding: 20px;
        }

        .scholarship-details h2 {
            margin-bottom: 10px;
            font-size: 18px;
            font-weight: bold;
            color: #003049;
        }

        .scholarship-details p {
            margin-bottom: 10px;
            font-size: 14px;
            color: #333;
        }

        .scholarship-details button {
            padding: 8px 16px;
            background-color: #004e98;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .search-container {
    /* flex: 1; */
    display: flex;
    justify-content: center;
    border: 1px solid #ccc; /* Add border around search container */
    border-radius: 5px; /* Add border-radius for rounded corners */
    padding: 5px; /* Add padding to separate input and button */
}

.search-form {
    display: flex;
    align-items: center;
}

.search-input {
    border: none; /* Remove default input border */
    padding: 5px; /* Add padding to input */
    outline: none; /* Remove input outline */
}

.search-button {
    background-color: #007bff; /* Button background color */
    color: #fff; /* Button text color */
    border: none; /* Remove default button border */
    padding: 5px 10px; /* Add padding to button */
    margin-left: 5px; /* Add margin to separate button from input */
    border-radius: 5px; /* Add border-radius for rounded corners */
    cursor: pointer; /* Add cursor pointer on hover */
}

.search-button:hover {
    background-color: #0056b3; /* Change background color on hover */
}

    </style>
</head>
<body>
    <header class="bg-white shadow">
        <div class="container mx-auto px-4">
            <nav class="flex items-center justify-between py-4">
                <div>
                    <a href="#" class="text-lg font-semibold text-gray-800">Vidyasarthi</a>
                </div>
                <div class="search-container">
                    <form action="/search" method="GET" class="search-form">
                        <input type="text" name="q" placeholder="Search Scholarships" class="search-input">
                        <button type="submit" class="search-button">Search</button>
                    </form>
                </div>
            </nav>
        </div>
    </header>
    

    <div class="flex h-screen">
        <div class="w-64 bg-gray-800 text-white">
          <div class="p-4">
            <h2 class="text-2xl font-bold">Scholarship</h2>
          </div>
          <nav class="text-white mt-8">
            <ul>
              <li class="py-2">
                <a href="/home" class="flex items-center px-4">
                  <i class="fas fa-home mr-2"></i> Home
                </a>
              </li>
              <li class="py-2">
                <a href="/get" class="flex items-center px-4">
                  <i class="fas fa-graduation-cap mr-2"></i> Scholarships
                </a>
              </li>
              <li class="py-2">
                <a href="#" class="flex items-center px-4">
                  <i class="fas fa-info-circle mr-2"></i> About
                </a>
              </li>
              <li class="py-2">
                <a href="/chat" class="flex items-center px-4">
                  <i class="fas fa-envelope mr-2"></i> Community Forum
                </a>
              </li>
              <li class="py-2">
                <a href="/profile" class="flex items-center px-4">
                  <i class="fa-solid fa-user-plus mr-2"></i> Profile
                </a>
              </li>
              <li class="py-2">
                <a href="/" class="flex items-center px-4">
                  <i class="fa-solid fa-right-to-bracket"></i> Log out
                </a>
              </li>
            </ul>
          </nav>
        </div>
        <div class="flex-1">
           
            <div class="scholarship-container">
                <% todos.forEach(todo => { %>
                    <div class="scholarship-frame">
                        <img src="card1.jpg" alt="" class="w-full">
                        <div class="scholarship-details">
                            <h2><%= todo.title %></h2>
                            <p><strong>Award:</strong> <%= todo.award %></p>
                            <p><strong>Eligibility:</strong> <%= todo.eligibility %></p>

                            <% if (todo.liked) { %>
                                <button class="unlike-btn" data-id="<%= todo._id %>">Unlike</button>
                            <% } else { %>
                                <button class="like-btn" data-id="<%= todo._id %>">Like</button>
                            <% } %>
                            <a href="/getTodo/<%= todo.title %>"><button>View Details</button></a>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            document.querySelector('.scholarship-container').addEventListener('click', async (event) => {
                const button = event.target;
                if (button.classList.contains('like-btn')) {
                    const scholarshipId = button.dataset.id;
                    try {
                        // Send request to backend to like scholarship
                        await fetch(`/scholarshiplike/${scholarshipId}`, { method: 'POST' });
                        button.textContent = 'Unlike';
                        button.classList.remove('like-btn');
                        button.classList.add('unlike-btn');
                    } catch (error) {
                        console.error('Error:', error);
                    }
                } else if (button.classList.contains('unlike-btn')) {
                    const scholarshipId = button.dataset.id;
                    try {
                        // Send request to backend to unlike scholarship
                        await fetch(`/scholarshipunlike/${scholarshipId}`, { method: 'DELETE' });
                        button.textContent = 'Like';
                        button.classList.remove('unlike-btn');
                        button.classList.add('like-btn');
                    } catch (error) {
                        console.error('Error:', error);
                    }
                }
            });
        });
    </script>
    
    
</body>
</html>
